{
  "name": "Project Checkpoint",
  "tagline": "An Application to Detect and Create Best Images from a Burst",
  "body": "Project Checkpoint\r\n\r\n#Progress Review \r\n\r\nWe encountered several roadblocks while implementing our project on Android. Almost all of them were due to technicalities inherent in mobile development. It took us a long while to make significant progress in the sequential Android code, and we realized that we were spending far too much time dealing with Android errors. After speaking with our mentor, we decided to switch platforms and instead make a C++-based project. We have made a lot of headway in implementing the sequential version of the [Viola-Jones' Algorithm](https://en.wikipedia.org/wiki/Violaâ€“Jones_object_detection_framework). We also read a lot of research papers to decide the most apt face detection algorithm for our project, understand the chosen one (Viola-Jones'), understand how eye state detection detection works and how can we implement it, designing our Machine Learning model for eye state and smile detection, and finally making a detailed plan on parts that we will parallelize. \r\n\r\n#Goals and Deliverables\r\nWe think we will be able to produce a working and highly efficient C++-based application to accurately detect the best pictures form a burst. We have read and discussed a lot of low-level technical details, and we would soon be starting to parallelize our program. From our initial tests, the sequential version is looking to be extremely slow and we feel that a parallel implementation will provide high speedups. \r\n\r\nA \"nice-to-have\" would be making our program to be extremely flexible so not basing our parallel implementation with respect to a particular machine's specifications and yet being able to exploit any machine's hardware spec. \r\n\r\n#Parallel Competition \r\nWe plan to show a demo along with speedup graphs. \r\n\r\n#Issues \r\nWe are concerned about detecting face not looking straight into the picture i.e. faces at different angles. This can be difficult.We are also not sure on how much dat should we train our ML model on. \r\n\r\n#Schedule \r\nIt has been updated on the main page. \r\n\r\n\r\n[Home](tanayvarma.github.io)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}